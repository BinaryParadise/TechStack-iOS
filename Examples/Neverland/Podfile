# Uncomment the next line to define a global platform for your project
platform :ios, '9.0'

if Gem::Version.new(`pod --version`) >= Gem::Version.new('1.9.0')
    install! 'cocoapods',
    :generate_multiple_pod_projects => true,
    :incremental_installation => true
    else
    raise 'cocoapods 最低要求1.9.0'
    return
end

if File.exists?("Podfile.lock")
  `rm Podfile.lock`
end

target 'Neverland' do
  # Uncomment the next line if you're using Swift or would like to use dynamic frameworks
  use_frameworks!
  use_modular_headers!

  # Pods for Neverland
  pod 'NLRouterAction', :path => '../NLRouterAction'
  pod 'NLModuleService', :path => '../NLModuleService'
  pod 'NLModelService', :path => '../NLModelService'
  pod 'NLFoundation', :path => '../NLFoundation'
  pod 'NLDataType', :path => '../NLDataType'
  pod 'NLWeibo', :path => '../NLWeibo'
  pod 'NLLogger', :path => '../NLLogger', :configurations => ['Debug']
  pod 'NLUtility', :path => '../NLUtility'
  pod 'NLUIComponent', :path => '../NLUIComponent'
  pod 'NLModuleProtocols', :path => '../NLModuleProtocols'
  pod 'NLExtension', :path => '../NLExtension'
  pod 'NLUIKit', :path => '../NLUIKit'
  pod 'Masonry'
  pod 'MCObserverKit'
  pod 'MLeaksFinder'
  
  target 'NeverlandTests' do
    inherit! :search_paths
    
    pod 'Specta', '~> 1.0'
    pod 'Expecta', '~> 1.0'
  end
  
end

post_install do |installer|
    require_relative 'Pods/Peregrine/Peregrine/PGGenerator.rb'
    PGGenerator::configure_project(installer, {'expr' => true, 'name' => 'PGRouteDefine', 'path' => '${SRCROOT}'})

    # 依赖关系图
    #  `efpodsanalyzer ../Neverland/Podfile`
end
