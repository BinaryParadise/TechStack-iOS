{
  "218236": {
    "answer": "C"
  },
  "218237": {
    "answer": "A"
  },
  "218234": {
    "answer": "A"
  },
  "227778": {
    "answer": "由于实参表达式是反序进入活动记录，而局部变量是顺序在活动记录中分配。"
  },
  "218238": {
    "answer": "C"
  },
  "218275": {
    "answer": "错误"
  },
  "218233": {
    "answer": "B"
  },
  "218274": {
    "answer": "正确"
  },
  "218239": {
    "answer": "D"
  },
  "218240": {
    "answer": "A"
  },
  "218276": {
    "answer": "正确"
  },
  "218232": {
    "answer": "D"
  },
  "218277": {
    "answer": "错误"
  },
  "218243": {
    "answer": "B"
  },
  "238927": {
    "answer": "在编译过程中始终要涉及到对一些语法符号的处理，这就需要用到语法符号的相关属性。为了在需要时能找到这些语法成分及其相关属性，就必须使用一些表格来保存这些语法成分及其属性，这些表格就是符号表。"
  },
  "218281": {
    "answer": "正确"
  },
  "218242": {
    "answer": "D"
  },
  "227771": {
    "answer": "wab+cde10—/+8+*+"
  },
  "218245": {
    "answer": "B"
  },
  "218250": {
    "answer": "B"
  },
  "218246": {
    "answer": "A"
  },
  "218282": {
    "answer": "正确"
  },
  "218279": {
    "answer": "正确"
  },
  "238935": {
    "answer": "）"
  },
  "218280": {
    "answer": "正确"
  },
  "218249": {
    "answer": "C"
  },
  "218252": {
    "answer": "B"
  },
  "218283": {
    "answer": "正确"
  },
  "218251": {
    "answer": "D"
  },
  "218285": {
    "answer": "错误"
  },
  "218284": {
    "answer": "错误"
  },
  "218254": {
    "answer": "C"
  },
  "227769": {
    "answer": "对循环的优化有三种：循环不变表达式外提、归纳变量删除与计算强度削减。"
  },
  "218256": {
    "answer": "C"
  },
  "218255": {
    "answer": "D"
  },
  "238930": {
    "answer": "）紧跟在条件转移语句后面的语句。"
  },
  "218253": {
    "answer": "B"
  },
  "218258": {
    "answer": "C"
  },
  "218291": {
    "answer": "正确"
  },
  "227789": {
    "answer": "/Subject/admin/pic/0519/227789B1.gif"
  },
  "218187": {
    "answer": "B"
  },
  "218185": {
    "answer": "D"
  },
  "218260": {
    "answer": "正确"
  },
  "218200": {
    "answer": "B"
  },
  "218186": {
    "answer": "B"
  },
  "218184": {
    "answer": "A"
  },
  "218196": {
    "answer": "B"
  },
  "218192": {
    "answer": "A"
  },
  "227792": {
    "answer": "/Subject/admin/pic/0519/227792B1.gif"
  },
  "238943": {
  },
  "218269": {
    "answer": "错误"
  },
  "218222": {
    "answer": "A"
  },
  "218220": {
    "answer": "A"
  },
  "218215": {
    "answer": "B"
  },
  "238945": {
    "answer": "定义的文法是二义性文法。"
  },
  "218223": {
    "answer": "D"
  },
  "218199": {
    "answer": "D"
  },
  "218193": {
    "answer": "B"
  },
  "218259": {
    "answer": "错误"
  },
  "218261": {
    "answer": "正确"
  },
  "227774": {
    "answer": "/Subject/admin/pic/0519/227774B1.gif"
  },
  "218208": {
    "answer": "B"
  },
  "218203": {
    "answer": "C"
  },
  "218265": {
    "answer": "错误"
  },
  "218225": {
    "answer": "D"
  },
  "218207": {
    "answer": "B"
  },
  "218204": {
    "answer": "C"
  },
  "227776": {
    "answer": "=q2"
  },
  "218197": {
    "answer": "B"
  },
  "218198": {
    "answer": "D"
  },
  "218191": {
    "answer": "C"
  },
  "218205": {
    "answer": "C"
  },
  "238939": {
    "answer": "的串。"
  },
  "227772": {
    "answer": "/Subject/admin/pic/0519/227772B1.gif"
  },
  "218206": {
    "answer": "D"
  },
  "218209": {
    "answer": "C"
  },
  "218210": {
    "answer": "D"
  },
  "218202": {
    "answer": "C"
  },
  "218212": {
    "answer": "C"
  },
  "218267": {
    "answer": "正确"
  },
  "238940": {
    "answer": "为："
  },
  "227797": {
    "answer": "/Subject/admin/pic/0519/227797B1.gif"
  },
  "227787": {
    "answer": "&nbsp;"
  },
  "227780": {
    "answer": "&nbsp;"
  },
  "218226": {
    "answer": "A"
  },
  "218272": {
    "answer": "正确"
  },
  "218219": {
    "answer": "D"
  },
  "218216": {
    "answer": "B"
  },
  "218221": {
    "answer": "C"
  },
  "238942": {
    "answer": "文法。"
  },
  "218268": {
    "answer": "正确"
  },
  "227779": {
  },
  "218270": {
    "answer": "错误"
  },
  "218227": {
    "answer": "C"
  },
  "218230": {
    "answer": "A"
  },
  "227786": {
    "answer": "&nbsp;"
  },
  "218273": {
    "answer": "正确"
  },
  "218231": {
    "answer": "B"
  },
  "238932": {
    "answer": "个输入符号，就能确定相对于某一产生式左部符号的句柄是否已在分析栈的顶部形成，从而也就可以确定当前所应采取的分析动作（是移进还是按某一产生式进行归约等）。"
  },
  "227794": {
    "answer": "&nbsp;"
  },
  "238947": {
    "answer": "&nbsp;"
  },
  "218262": {
    "answer": "正确"
  },
  "238925": {
    "answer": "）出错处理程序：若编译过程中发现源程序存在错误，则报告错误的性质和错误发生的地点，有些还可以自动校正错误。"
  },
  "227768": {
    "answer": "词法分析，对构成源程序的字符串进行扫描和分解，识别出一个个的单词；②语法分析，根据语言的语法规则，把单词符号串分解成各类语法单位；③语义分析与中间代码产生，即对各类语法单位，分析其汉一并进行初步翻译；④代码优化，以期产生更高效的代码；⑤目标代码生成，把中间代码变换成特定机器上的低级语言指令形式。"
  },
  "227777": {
    "answer": "&nbsp;"
  },
  "218266": {
    "answer": "正确"
  },
  "238936": {
    "answer": "/Subject/admin/pic/0519/238936B1.gif"
  },
  "218264": {
    "answer": "正确"
  },
  "239001": {
    "answer": "}"
  },
  "234605": {
    "answer": "B"
  },
  "234610": {
    "answer": "B"
  },
  "234614": {
    "answer": "B"
  },
  "239000": {
    "answer": "}"
  },
  "234594": {
    "answer": "B"
  },
  "234598": {
    "answer": "C"
  },
  "239003": {
    "answer": "一般而言，忙等待比阻塞等待低效，因为忙等待无谓地消耗指令周期。但是，存在特殊的情形，当一个进程执行到一个需要等待某条件被满足的点，而此时该条件已经满足时，忙等待能够立刻发现已满足的条件，相比之下，阻塞等待还会因为要切换出再切换回进程而消耗操作系统资源，在这种情形，阻塞等待低效。"
  },
  "234581": {
    "answer": "C"
  },
  "234597": {
    "answer": "D"
  },
  "234592": {
    "answer": "D"
  },
  "234631": {
    "answer": "C"
  },
  "234615": {
    "answer": "C"
  },
  "239004": {
    "answer": "）环路等待条件。"
  },
  "234642": {
    "answer": "C"
  },
  "234644": {
    "answer": "D"
  },
  "234623": {
    "answer": "C"
  },
  "234643": {
    "answer": "C"
  },
  "234624": {
    "answer": "D"
  },
  "234640": {
    "answer": "B"
  },
  "234629": {
    "answer": "D"
  },
  "234588": {
    "answer": "D"
  },
  "234587": {
    "answer": "C"
  },
  "234604": {
    "answer": "A"
  },
  "234603": {
    "answer": "D"
  },
  "234606": {
    "answer": "C"
  },
  "234586": {
    "answer": "D"
  },
  "239002": {
    "answer": "coend"
  },
  "234600": {
    "answer": "C"
  },
  "234628": {
    "answer": "B"
  },
  "234636": {
    "answer": "B"
  },
  "234632": {
    "answer": "B"
  },
  "234626": {
    "answer": "B"
  },
  "234639": {
    "answer": "D"
  },
  "234580": {
    "answer": "A"
  },
  "234579": {
    "answer": "B"
  },
  "234611": {
    "answer": "B"
  },
  "234583": {
    "answer": "B"
  },
  "234609": {
    "answer": "A"
  },
  "234625": {
    "answer": "B"
  },
  "234622": {
    "answer": "B"
  },
  "234635": {
    "answer": "D"
  },
  "234637": {
    "answer": "D"
  },
  "234607": {
    "answer": "D"
  },
  "234620": {
    "answer": "D"
  },
  "239005": {
    "answer": "．采用银行家算法：因为在分配时，保证了系统处于安全状态。"
  },
  "234627": {
    "answer": "C"
  },
  "234590": {
    "answer": "C"
  },
  "234601": {
    "answer": "B"
  },
  "234593": {
    "answer": "B"
  },
  "234584": {
    "answer": "C"
  },
  "234641": {
    "answer": "D"
  },
  "234596": {
    "answer": "C"
  },
  "234589": {
    "answer": "D"
  },
  "234585": {
    "answer": "B"
  },
  "234608": {
    "answer": "C"
  },
  "234613": {
    "answer": "A"
  },
  "234621": {
    "answer": "B"
  },
  "234619": {
    "answer": "D"
  },
  "234634": {
    "answer": "D"
  },
  "234638": {
    "answer": "A"
  },
  "234612": {
    "answer": "C"
  },
  "234616": {
    "answer": "C"
  },
  "234602": {
    "answer": "D"
  },
  "234591": {
    "answer": "D"
  },
  "234582": {
    "answer": "C"
  },
  "234633": {
    "answer": "D"
  },
  "239008": {
    "answer": "当哲学家们高度一致反复拿起又放下左侧的叉子时，便出现饥饿现象。"
  },
  "234599": {
    "answer": "D"
  },
  "247888": {
    "answer": "则一定不会发生死锁。"
  },
  "234618": {
    "answer": "A"
  },
  "234617": {
    "answer": "B"
  },
  "234630": {
    "answer": "C"
  },
  "234671": {
    "answer": "C"
  },
  "239013": {
    "answer": "。这一点应该注意。"
  },
  "234674": {
    "answer": "C"
  },
  "234647": {
    "answer": "A"
  },
  "234661": {
    "answer": "D"
  },
  "234659": {
    "answer": "A"
  },
  "234656": {
    "answer": "A"
  },
  "234651": {
    "answer": "C"
  },
  "239012": {
    "answer": "为非法地址。"
  },
  "234660": {
    "answer": "C"
  },
  "234646": {
    "answer": "A"
  },
  "234665": {
    "answer": "B"
  },
  "234662": {
    "answer": "B"
  },
  "234650": {
    "answer": "C"
  },
  "234673": {
    "answer": "C"
  },
  "234649": {
    "answer": "A"
  },
  "234657": {
    "answer": "B"
  },
  "239010": {
    "answer": "）"
  },
  "234667": {
    "answer": "A"
  },
  "234664": {
    "answer": "A"
  },
  "239009": {
    "answer": "动态分区和固定分区分配方式相比，内存空间的利用率要高些。但是，总会存在一些分散的较小空闲分区，即外部碎片，它们存在于已分配分区之间，不能充分利用。可以采用拼接技术加以解决。固定分区分配方式存在内部碎片，而无外部碎片；而动态分区分配方式存在外部碎片，无内部碎片。"
  },
  "234645": {
    "answer": "B"
  },
  "234652": {
    "answer": "A"
  },
  "234668": {
    "answer": "A"
  },
  "234666": {
    "answer": "A"
  },
  "234669": {
    "answer": "B"
  },
  "234658": {
    "answer": "B"
  },
  "234653": {
    "answer": "D"
  },
  "234670": {
    "answer": "A"
  },
  "234655": {
    "answer": "A"
  },
  "234654": {
    "answer": "D"
  },
  "234672": {
    "answer": "B"
  },
  "234648": {
    "answer": "B"
  },
  "234663": {
    "answer": "D"
  },
  "234693": {
    "answer": "C"
  },
  "234680": {
    "answer": "B"
  },
  "234689": {
    "answer": "C"
  },
  "234694": {
    "answer": "B"
  },
  "234677": {
    "answer": "B"
  },
  "234690": {
    "answer": "D"
  },
  "234683": {
    "answer": "B"
  },
  "234676": {
    "answer": "B"
  },
  "234685": {
    "answer": "C"
  },
  "239016": {
    "answer": "的情况。"
  },
  "234686": {
    "answer": "D"
  },
  "234691": {
    "answer": "A"
  },
  "239018": {
    "answer": "/Subject/admin/pic/0542/239018B1.gif"
  },
  "234688": {
    "answer": "B"
  },
  "234679": {
    "answer": "B"
  },
  "234682": {
    "answer": "C"
  },
  "234687": {
    "answer": "D"
  },
  "247887": {
    "answer": "）"
  },
  "234681": {
    "answer": "A"
  },
  "239014": {
    "answer": "。"
  },
  "234684": {
    "answer": "D"
  },
  "234675": {
    "answer": "B"
  },
  "234692": {
    "answer": "D"
  },
  "239023": {
    "answer": "。"
  },
  "234713": {
    "answer": "D"
  },
  "234706": {
    "answer": "C"
  },
  "234707": {
    "answer": "B"
  },
  "234698": {
    "answer": "B"
  },
  "234705": {
    "answer": "C"
  },
  "234697": {
    "answer": "A"
  },
  "239031": {
    "answer": "/Subject/admin/pic/0542/239031A1.gif"
  },
  "234700": {
    "answer": "A"
  },
  "234712": {
    "answer": "B"
  },
  "239021": {
    "answer": "/Subject/admin/pic/0542/239021A1.gif"
  },
  "234704": {
    "answer": "A"
  },
  "234696": {
    "answer": "C"
  },
  "234699": {
    "answer": "B"
  },
  "234711": {
    "answer": "C"
  },
  "234703": {
    "answer": "C"
  },
  "234714": {
    "answer": "B"
  },
  "234710": {
    "answer": "B"
  },
  "234708": {
    "answer": "D"
  },
  "234709": {
    "answer": "D"
  },
  "234701": {
    "answer": "B"
  },
  "234695": {
    "answer": "B"
  },
  "234702": {
    "answer": "B"
  },
  "234678": {
    "answer": "D"
  },
  "239040": {
    "answer": "/Subject/admin/pic/0542/239040B1.gif"
  },
  "234718": {
    "answer": "B"
  },
  "234716": {
    "answer": "A"
  },
  "234720": {
    "answer": "A"
  },
  "234722": {
    "answer": "B"
  },
  "234721": {
    "answer": "B"
  },
  "234715": {
    "answer": "C"
  },
  "239028": {
    "answer": "码的格式（使用二进制还是十进制，有没有特别的分隔符等）。"
  },
  "234742": {
    "answer": "A"
  },
  "239034": {
    "answer": "/Subject/admin/pic/0542/239034B1.gif"
  },
  "239042": {
    "answer": "&nbsp;"
  },
  "234727": {
    "answer": "C"
  },
  "234737": {
    "answer": "A"
  },
  "234729": {
    "answer": "D"
  },
  "234760": {
    "answer": "A"
  },
  "234748": {
    "answer": "C"
  },
  "234752": {
    "answer": "C"
  },
  "239038": {
    "answer": "）在磁盘上一处或多处保存空闲空间链接指针的副本，指针更新时，同时更新相应副本，这样，就算内存和磁盘块出现故障，也有办法借助副本获得有效的指针值。"
  },
  "234763": {
    "answer": "B"
  },
  "234754": {
    "answer": "B"
  },
  "234764": {
    "answer": "D"
  },
  "234719": {
    "answer": "C"
  },
  "234725": {
    "answer": "C"
  },
  "234759": {
    "answer": "A"
  },
  "234757": {
    "answer": "C"
  },
  "234750": {
    "answer": "B"
  },
  "234762": {
    "answer": "C"
  },
  "234755": {
    "answer": "A"
  },
  "234765": {
    "answer": "D"
  },
  "234747": {
    "answer": "C"
  },
  "234753": {
    "answer": "B"
  },
  "239035": {
    "answer": "）哈希或索引结构"
  },
  "239039": {
    "answer": "/Subject/admin/pic/0542/239039B1.gif"
  },
  "234758": {
    "answer": "B"
  },
  "239037": {
    "answer": "实现为普通文件，便于操作系统以统一的方式对系统中的对象进行管理，以便更易于创建和管理属于用户的目录。"
  },
  "234749": {
    "answer": "A"
  },
  "234761": {
    "answer": "C"
  },
  "234751": {
    "answer": "A"
  },
  "234766": {
    "answer": "C"
  },
  "239029": {
    "answer": "。"
  },
  "234735": {
    "answer": "A"
  },
  "234739": {
    "answer": "B"
  },
  "234744": {
    "answer": "C"
  },
  "234741": {
    "answer": "D"
  },
  "234740": {
    "answer": "B"
  },
  "234743": {
    "answer": "B"
  },
  "234726": {
    "answer": "D"
  },
  "234732": {
    "answer": "A"
  },
  "234745": {
    "answer": "B"
  },
  "234733": {
    "answer": "C"
  },
  "234731": {
    "answer": "D"
  },
  "234728": {
    "answer": "B"
  },
  "234736": {
    "answer": "C"
  },
  "234746": {
    "answer": "A"
  },
  "234738": {
    "answer": "D"
  },
  "234734": {
    "answer": "C"
  },
  "234730": {
    "answer": "A"
  },
  "217293": {
    "answer": "C"
  },
  "217148": {
    "answer": "D"
  },
  "238851": {
    "answer": "C)"
  },
  "227217": {
  },
  "227247": {
    "answer": "2}"
  },
  "217093": {
    "answer": "正确"
  },
  "267966": {
    "answer": "个。"
  },
  "217150": {
    "answer": "B"
  },
  "217146": {
    "answer": "A"
  },
  "217291": {
    "answer": "C"
  },
  "227249": {
    "answer": "中有一个为空集时等式成立。"
  },
  "217295": {
    "answer": "B"
  },
  "217292": {
    "answer": "B"
  },
  "217294": {
    "answer": "B"
  },
  "227222": {
    "answer": "}}"
  },
  "217302": {
    "answer": "D"
  },
  "217303": {
    "answer": "C"
  },
  "227244": {
    "answer": "/Subject/admin/pic/0518/227244B1.gif"
  },
  "227223": {
    "answer": "/Subject/admin/pic/0518/227223B1.gif"
  },
  "217299": {
    "answer": "C"
  },
  "267968": {
    "answer": "C"
  },
  "227233": {
    "answer": "┐p→q"
  },
  "267967": {
    "answer": "C"
  },
  "227219": {
    "answer": "/Subject/admin/pic/0518/227219B1.gif"
  },
  "217098": {
    "answer": "错误"
  },
  "227260": {
  },
  "217296": {
    "answer": "D"
  },
  "217097": {
    "answer": "正确"
  },
  "238848": {
    "answer": "&nbsp;"
  },
  "227251": {
    "answer": "该公式为非重言式的可满足式。"
  },
  "217298": {
    "answer": "A"
  },
  "217163": {
    "answer": "A"
  },
  "267970": {
    "answer": "A"
  },
  "217305": {
    "answer": "A"
  },
  "217306": {
    "answer": "B"
  },
  "238868": {
    "answer": "/Subject/admin/pic/0518/238868B1.gif"
  },
  "217100": {
    "answer": "正确"
  },
  "267982": {
    "answer": "D"
  },
  "227268": {
    "answer": "&nbsp;"
  },
  "238857": {
    "answer": "I"
  },
  "227278": {
    "answer": "&nbsp;"
  },
  "217307": {
    "answer": "A"
  },
  "217309": {
    "answer": "D"
  },
  "227231": {
    "answer": "。"
  },
  "267973": {
    "answer": "、传递。"
  },
  "227259": {
    "answer": "）不具有传递性，故不是等价关系。"
  },
  "217101": {
    "answer": "正确"
  },
  "227227": {
    "answer": "反自反"
  },
  "217104": {
    "answer": "错误"
  },
  "227277": {
    "answer": "是Ｘ上的部分序关系。"
  },
  "238855": {
    "answer": "是传递的。"
  },
  "217313": {
    "answer": "B"
  },
  "217242": {
    "answer": "C"
  },
  "227218": {
    "answer": "}"
  },
  "267971": {
    "answer": "A"
  },
  "217311": {
    "answer": "D"
  },
  "238840": {
  },
  "227282": {
    "answer": "．"
  },
  "227284": {
    "answer": "。由此，任意全序集至多只有一个极小元。"
  },
  "217105": {
    "answer": "错误"
  },
  "238865": {
    "answer": "上的先等价关系。"
  },
  "217317": {
    "answer": "A"
  },
  "227253": {
    "answer": "。"
  },
  "227256": {
    "answer": "对称。"
  },
  "227242": {
    "answer": "对称"
  },
  "227255": {
    "answer": "。"
  },
  "267974": {
    "answer": "A"
  },
  "217320": {
    "answer": "B"
  },
  "267977": {
    "answer": "&nbsp;"
  },
  "217323": {
    "answer": "C"
  },
  "227230": {
    "answer": "16"
  },
  "217324": {
    "answer": "C"
  },
  "267975": {
    "answer": "单射，满射，双射。"
  },
  "217315": {
    "answer": "C"
  },
  "217289": {
    "answer": "D"
  },
  "217102": {
    "answer": "正确"
  },
  "238866": {
    "answer": "。"
  },
  "217321": {
    "answer": "A"
  },
  "217322": {
    "answer": "B"
  },
  "217319": {
    "answer": "D"
  },
  "238856": {
    "answer": "所以彼得森图非平面图。"
  },
  "217337": {
    "answer": "C"
  },
  "227252": {
    "answer": "条边，而树是边最少的连通图。"
  },
  "217325": {
    "answer": "B"
  },
  "217343": {
    "answer": "C"
  },
  "217334": {
    "answer": "A"
  },
  "227274": {
    "answer": "证明：建立图的模型，用顶点表示人，若某两人聊过天，则在相应的顶点之间画一条边。由握手定理的推论，度为奇数的顶点的个数为偶数，所以结论成立。"
  },
  "217400": {
    "answer": "C"
  },
  "217327": {
    "answer": "C"
  },
  "217342": {
    "answer": "D"
  },
  "238863": {
    "answer": "一定连通。"
  },
  "217106": {
    "answer": "正确"
  },
  "267976": {
    "answer": "D"
  },
  "267979": {
    "answer": "正确"
  },
  "217341": {
    "answer": "A"
  },
  "217108": {
    "answer": "正确"
  },
  "227265": {
    "answer": "的定义，它们之间有边。"
  },
  "227295": {
    "answer": "13"
  },
  "217112": {
    "answer": "正确"
  },
  "267978": {
    "answer": "n=7+3+1=11"
  },
  "217330": {
    "answer": "B"
  },
  "227266": {
    "answer": "个顶点。"
  },
  "217111": {
    "answer": "错误"
  },
  "227281": {
  },
  "217328": {
    "answer": "D"
  },
  "227273": {
    "answer": "个顶点的简单图中是不可能的。"
  },
  "217329": {
    "answer": "A"
  },
  "217331": {
    "answer": "B"
  },
  "217326": {
    "answer": "B"
  },
  "227225": {
    "answer": "/Subject/admin/pic/0518/227225B2.gif"
  },
  "217384": {
    "answer": "D"
  },
  "217388": {
    "answer": "B"
  },
  "227262": {
    "answer": "=9"
  },
  "217114": {
    "answer": "错误"
  },
  "217389": {
    "answer": "C"
  },
  "227280": {
    "answer": "f(x1)=f(x2)=…=f(xk)=…"
  },
  "217117": {
    "answer": "正确"
  },
  "217397": {
    "answer": "B"
  },
  "217395": {
    "answer": "C"
  },
  "217394": {
    "answer": "B"
  },
  "217390": {
    "answer": "C"
  },
  "217385": {
    "answer": "A"
  },
  "217387": {
    "answer": "C"
  },
  "217398": {
    "answer": "C"
  },
  "217115": {
    "answer": "正确"
  },
  "217393": {
    "answer": "C"
  },
  "267981": {
    "answer": "。"
  },
  "217392": {
    "answer": "A"
  },
  "217113": {
    "answer": "正确"
  },
  "227264": {
    "answer": "B"
  },
  "229785": {
    "answer": "规范化的目的是使众多的开发者遵守相同的规范，使软件生产摆脱个人生产方式，进入标准化、工程化的生产方式。文档化是将软件的设计思想、设计过程和实现过程完整地记录下来，以便于后人的使用和维护，在开发过程中各类相关人员借助于文档进行交流和沟通。另外，在开发过程中产生的各类文档使得软件的生产过程由不可见变为可见，便于管理者对软件生产进度和开发过程进行管理。在用户最终验收时可以通过对提交的文档进行技术审查和管理审查，保证软件的质量。"
  },
  "229779": {
    "answer": "）运行与维护阶段是通过各种必要的维护措施支持软件系统能持久地满足用户的需要。"
  },
  "229777": {
    "answer": "）维护，提交维护报告。"
  },
  "229718": {
    "answer": "增量模型是瀑布模型的顺序特征和快速原型模型的迭代特征相结合的产物。"
  },
  "229775": {
    "answer": "快速原型技术的基本思想是：在软件开发的早期，快速开发一个目标软件系统的原型，让用户对其进行评价并提出修改意见，然后开发人员根据用户的意见对原型进行改进。"
  },
  "229724": {
    "answer": "针对软件生命周期各阶段活动的一般规律，对软件开发过程进行定量度量的量化，为软件工程管理提供阶段性评价，为软件开发过程提供的原则和方法。"
  },
  "229720": {
    "answer": "瀑布模型是将软件生命周期的各项活动规定为依线性顺序连接的若干阶段的模型，适合于软件需求很明确的软件项目。"
  },
  "229722": {
    "answer": "所谓快速原型模型是快速建立起来的可以在计算机上运行的程序，它所能完成的功能往往是最终产品能完成的功能的一个子集。"
  },
  "229712": {
    "answer": "对于大型软件，只开发一个原型往往达不到要求。螺旋模型将瀑布模型和增量模型结合起来，并加入了风险分析。"
  },
  "229725": {
    "answer": "软件开发项目生存期各阶段应包括得文档以及与各类人员的关系如下：可行性研究报告、项目开发计划、软件需求说明书、数据要求说明书、测试计划、概要设计说明书、详细设计说明书、用户手册、操作手册、测试分析报告、开发进度月报、项目开发总结、程序维护手册（维护修改建议）。"
  },
  "229773": {
    "answer": "经济、技术、社会环境和人。"
  },
  "229798": {
    "answer": "事务型数据流图特征：事务处理中心将它的输入流分离成许多发散的数据流，形成许多加工路径，并根据输入的值选择其中一个路径来执行。"
  },
  "229797": {
    "answer": "”的问题。"
  },
  "229800": {
    "answer": "“”方框表示数据的源点或终点。"
  },
  "278462": {
    "answer": "&nbsp;"
  },
  "229792": {
    "answer": "基线是软件生存期中各开发阶段末尾的特定点，又称里程碑。"
  },
  "229788": {
    "answer": "数据流图描绘系统的逻辑模型，图中没有任何具体的物理元素，只是描绘信息在系统中流动和处理的情况。"
  },
  "229801": {
    "answer": "”。具体任务包括确定软件系统的功能需求、性能需求和运行环境约束，编制软件需求规格说明书、软件系统的验收测试准则和初步的用户手册。"
  },
  "229814": {
    "answer": "格式化病员数据"
  },
  "229803": {
    "answer": "软件配置管理的主要目标是：标识变更；控制变更；确保变更的正确实现；报告有关变更。"
  },
  "229935": {
    "answer": "），若一组模块都访问同一个公共数据环境，则它们之间的耦合就称为公共耦合。公共的数据环境可以是全局数据结构、共享的通信区、内存的公共覆盖区等。"
  },
  "229951": {
    "answer": "当模块内各部分之间没有联系，或者即使有联系，这种联系也很松散，则称这种模块为偶然内聚模块，它是内聚程度最低的模块。"
  },
  "229948": {
    "answer": "一组模块通过参数表传递记录信息，就是标记耦合。这个记录是某一数据结构的子结构，而不是简单变量。"
  },
  "229938": {
    "answer": "模块化就是把程序划分成独立命名且可独立访问的模块，每个模块完成一个子功能，把这些模块集成起来构成一个整体，可以完成指定的功能满足用户的需求。"
  },
  "229937": {
    "answer": "，如果一个模块内各功能部分都使用了相同的输入数据，或产生了相同的输出数据，则称之为通信内聚模块。通常，通信内聚模块是通过数据流图来定义的。"
  },
  "229956": {
    "answer": "”的方法加以改进。"
  },
  "229934": {
    "answer": "顺序内聚是指一个模块内的处理元素和同一个功能密切相关，而且这些处理必须顺序执行（顺序依赖）。顺序内聚也是最高内聚。"
  },
  "229941": {
    "answer": "过程内聚是指使用流程图作为工具设计程序时，把流程图中的某一部分划出组成模块，就得到过程内聚模块。"
  },
  "229932": {
    "answer": "耦合是对一个软件结构内不同模块之间互连程度的度量。"
  },
  "229968": {
    "answer": "流程图是由一些特定意义的图形、流程线及简要的文字说明构成，它能清晰明确地表示程序的运行过程。"
  },
  "229969": {
    "answer": "判断表是一个二维表，分别来表示条件和行动。采用判断表可以清晰的表达条件、决策规则和应采取的行动之间的逻辑关系。"
  },
  "229972": {
    "answer": "&nbsp;"
  },
  "229971": {
    "answer": "/Subject/admin/pic/0543/229971B1.gif"
  },
  "229974": {
    "answer": "/Subject/admin/pic/0543/229974B1.gif"
  },
  "278469": {
    "answer": "/Subject/admin/pic/0543/278469B1.gif"
  },
  "229988": {
    "answer": "顺序图用于描述一组交互对象间的交互方式，它表示完成某项行为的对象和这些对象之间传递消息的时间顺序。"
  },
  "229978": {
    "answer": "完善性维护是指交付使用后，随着对系统的功能的熟悉，对系统环境的掌握，用户提出了一些新的增加功能和性能的要求，这些要求又是合理的，尽管需求规格说明书中没有规定，但对完善系统功能是必要的，则必须列入维护阶段再次开发设计测试维护，以适应用户要求，完善软件的功能，提高软件质量。"
  },
  "229994": {
    "answer": "用例包含参与者，用例和事件流等要素。"
  },
  "278466": {
    "answer": "（）"
  },
  "230285": {
    "answer": "分以上。"
  },
  "229992": {
    "answer": "（），返回类型为该类的唯一对象的引用。"
  },
  "230001": {
    "answer": "/Subject/admin/pic/0543/230001B1.gif"
  },
  "278464": {
    "answer": "》"
  },
  "230099": {
    "answer": "持续集成是指能够自动的集成已经提交的代码，直至发布到测试服务器供测试的整个过程。"
  },
  "230100": {
    "answer": "）嵌套的循环和分支程序层次不要超过五层。"
  },
  "229840": {
    "answer": "准考号"
  },
  "230286": {
    "answer": "针对不合理的地方请自行设计解决方案，合理即可。"
  },
  "230119": {
    "answer": "abce"
  },
  "230110": {
    "answer": "白盒测试法的前提是可以把程序看成装在一个透明的白盒子里，也就是完全了解程序的结构和处理过程。这种方法按照程序内部的逻辑测试程序，检验程序中的每条通路是否都能按预定要求正确工作。"
  },
  "230101": {
    "answer": "语句覆盖是指设计若干个测试用例，运行被测程序，使得每一可执行语句至少执行一次。"
  },
  "247906": {
    "answer": "）对软件质量进行度量。即对软件质量进行跟踪，及时记录和报告软件质量情况。"
  },
  "230115": {
    "answer": "）系统测试：检测软件系统与用户的实际使用环境、硬件系统、通信系统、系统部署等软件外部系统的适应性。"
  },
  "230102": {
    "answer": "判定覆盖就是设计若干个测试用例，运行被测程序，使得每个语句至少执行一次，程序中每个判断的取真分支和取假分支至少经历一次。"
  },
  "230107": {
    "answer": "单元测试是把每个模块作为一个单独的实体来测试。模块测试的目的是保证每个模块作为一个单元能正确运行。"
  },
  "230116": {
    "answer": "的原理是在开发功能代码之前，先编写单元测试用例代码，测试代码确定需要编写什么产品代码。"
  },
  "230125": {
    "answer": "预防性维护是指为了改进软件的可靠性与维护性，为了适应未来的软硬件的环境变化，主动地增加预防性的新版本功能，以使软件适应市场变化而不被淘汰。"
  },
  "230123": {
    "answer": "完善性维护是指交付使用后，随着对系统的功能的熟悉，对系统环境的掌握，用户提出了一些新的增加功能和性能的要求，这些要求又是合理的，尽管需求规格说明书中没有规定，但对完善系统功能是必要的，则必须列入维护阶段再次开发设计测试维护，以适应用户要求，完善软件的功能，提高软件质量。"
  },
  "230122": {
    "answer": "适应性维护指在硬件环境改善，软件支撑环境改善的情况下，交付使用的软件系统做相应的修改，以适应新的系统环境。"
  },
  "230127": {
    "answer": "）领域级：自底向上集成为各子系统，并说明各子系统在软件系统的作用和位置，反映在应用层面上用户的可能操作。"
  },
  "230120": {
    "answer": "改正性维护是指发现和改正潜藏的软件错误。"
  },
  "229943": {
    "answer": "数据耦合是指一个模块访问另一个模块时，彼此之间是通过简单数据参数（不是控制参数、公共数据结构或外部变量）来交换输入、输出信息的。数据耦合是最弱的耦合。"
  },
  "229940": {
    "answer": "非直接耦合指两个模块之间没有直接关系，它们之间的联系完全是通过主模块的控制和调用来实现的。"
  },
  "229957": {
    "answer": "）内容耦合。"
  },
  "229950": {
    "answer": "如果一个模块通过传送开关、标志、名、字等控制信息，明显地控制选择另一模块的功能，就是控制耦合。控制耦合是中等程度的耦合，它增加了系统的复杂程度。控制耦合往往是多余的，在把模块适当分解之后通常可以用数据耦合代替它。"
  },
  "229949": {
    "answer": "逻辑内聚是指模块把几种相关的功能组合在一起，每次被调用时，由传送给模块的判定参数来确定该模块应执行哪一种功能。"
  },
  "229952": {
    "answer": "一组模块都访问同一全局简单变量而不是同一全局数据结构，而且不是通过参数表传递该全局变量的信息，则称之为外部耦合。"
  },
  "229958": {
    "answer": "用户界面是用户和系统间进行接收数据、数据变换、展示数据的平台，它实现的是系统内部信息表示和用户数据显示之间的转换。"
  },
  "229944": {
    "answer": "时间内聚又称为经典内聚。这种模块大多为多功能模块，但模块的各个功能的执行与时间有关，通常要求所有功能必须在同一时间段内执行。"
  },
  "229983": {
    "answer": "/Subject/admin/pic/0543/229983B1.gif"
  },
  "229980": {
    "answer": "即信息隐藏，通过封装对外界隐藏了对象的实现细节。"
  },
  "229990": {
    "answer": "”特性。面向对象方法中，常用状态图、顺序图、合作图、活动图构件系统的动态模型。"
  },
  "229996": {
    "answer": "类的职责分为做型和知道型；做型是通过类的方法实现的，知道型是通过类的内部封装的属性以及类间的关系来体现。"
  },
  "278463": {
    "answer": "B"
  },
  "230284": {
    "answer": "分以上。"
  },
  "229987": {
    "answer": "多态性：指相同的操作或函数、过程可作用于多种类型的对象上并获得不同结果。"
  },
  "254070": {
    "answer": "售票经理"
  },
  "230012": {
    "answer": "include</u>"
  },
  "230283": {
    "answer": "分。"
  },
  "230095": {
    "answer": "）查询余额（）"
  },
  "229977": {
    "answer": "”。"
  },
  "229976": {
    "answer": "持续集成是指能够自动的集成已经提交的代码，直至发布到测试服务器供测试的整个过程。"
  },
  "230104": {
    "answer": "模拟对象是指运用对象的模拟版本来代替被依赖的类，这些模拟对象被传递给要测试的类后，依赖关系就被对象的模拟版本代替了，而被测试对象则仍然会以为自己所处理的是真实的对象。"
  },
  "230105": {
    "answer": "就是设计足够的测试用例，使得判断中每个条件的所有可能取值至少执行一次，每个判断中的每个条件的可能取值至少执行一次。"
  },
  "230112": {
    "answer": "常用的黑盒测试方法有等价类划分、边界值分析、错误推测、因果图。"
  },
  "230106": {
    "answer": "条件组合覆盖就是设计足够的测试用例，运行被测程序，使得每个判断的所有可能的条件取值组合至少执行一次。"
  },
  "230103": {
    "answer": "条件覆盖是指设计若干个测试用例，运行被测程序，使得程序中每个语句至少执行一次，每个判断的每个条件的可能取值至少执行一次。"
  },
  "230114": {
    "answer": "前五种覆盖标准把注意力集中在单个判定或判定的各个条件上，可能会使程序某些路径没有执行到。路径覆盖根据各判定表达式取值的组合，使程序沿着不同的路径执行，查错能力强。但由于它是从各判定的整体组合出发设计测试用例的，可能使测试用例达不到条件组合覆盖的要求。"
  },
  "230288": {
    "answer": "．复审在软件生命周期的各个节点：需求分析，设计，编码，测试，至少需要四次。一般通过开会的方式，将相关人员召集在一起讨论文档和代码，最终形成决议和纪要。"
  },
  "230129": {
    "answer": "图作为进度的安排是不够的。"
  },
  "278468": {
    "answer": "135"
  },
  "217062": {
    "answer": "错误"
  },
  "217061": {
    "answer": "正确"
  },
  "217019": {
    "answer": "D"
  },
  "217065": {
    "answer": "正确"
  },
  "217018": {
    "answer": "D"
  },
  "217021": {
    "answer": "B"
  },
  "238846": {
    "answer": "有穷性、确定性、可行性、有输入、有输出。"
  },
  "227296": {
    "answer": "数据结构是相互之间存在一种或多种特定关系的数据元素的集合。"
  },
  "217064": {
    "answer": "正确"
  },
  "238852": {
    "answer": "集合、线性结构、树状结构、图状结构（网状结构）。"
  },
  "217017": {
    "answer": "A"
  },
  "217035": {
    "answer": "A"
  },
  "217023": {
    "answer": "D"
  },
  "217027": {
    "answer": "C"
  },
  "232773": {
  },
  "217025": {
    "answer": "A"
  },
  "238849": {
    "answer": "种可能的出栈序列，即为："
  },
  "238883": {
    "answer": "）删除顺序表中重复的元素"
  },
  "217070": {
    "answer": "错误"
  },
  "217024": {
    "answer": "B"
  },
  "232775": {
    "answer": "）"
  },
  "217030": {
    "answer": "D"
  },
  "217068": {
    "answer": "错误"
  },
  "227330": {
    "answer": "/Subject/admin/pic/0517/227330B1.gif"
  },
  "217069": {
    "answer": "正确"
  },
  "217031": {
    "answer": "A"
  },
  "227299": {
    "answer": "栈是限定只能在表的一端进行插入和删除操作的线性表。队列是只能在表的一端进行插入和在另一端进行删除操作的线性表。栈是先进后出，而队列是先进先出。"
  },
  "217022": {
    "answer": "A"
  },
  "217067": {
    "answer": "错误"
  },
  "217029": {
    "answer": "D"
  },
  "217042": {
    "answer": "C"
  },
  "217043": {
    "answer": "C"
  },
  "217066": {
    "answer": "正确"
  },
  "217040": {
    "answer": "A"
  },
  "238845": {
    "answer": "线性表具有两种存储结构即顺序存储结构和链接存储结构。线性表的顺序存储结构可以直接存取数据元素，方便灵活、效率高，但插入、删除操作时将会引起元素的大量移动，因而降低效率：而在链接存储结构中内存采用动态分配，利用率高，但需增设指示结点之间关系的指针域，存取数据元素不如顺序存储方便，但结点的插入、删除操作较简单。"
  },
  "217059": {
    "answer": "错误"
  },
  "217026": {
    "answer": "C"
  },
  "217039": {
    "answer": "B"
  },
  "217049": {
    "answer": "D"
  },
  "217048": {
    "answer": "D"
  },
  "227326": {
    "answer": "b[i][j]=b[0][0]+(i+3j)×s"
  },
  "217054": {
    "answer": "A"
  },
  "227331": {
    "answer": "/Subject/admin/pic/0517/227331A1.gif"
  },
  "217073": {
    "answer": "正确"
  },
  "217053": {
    "answer": "D"
  },
  "232776": {
    "answer": "m"
  },
  "217044": {
    "answer": "B"
  },
  "217058": {
    "answer": "D"
  },
  "217076": {
    "answer": "正确"
  },
  "217071": {
    "answer": "正确"
  },
  "227304": {
    "answer": "）"
  },
  "217052": {
    "answer": "A"
  },
  "217055": {
    "answer": "D"
  },
  "217072": {
    "answer": "正确"
  },
  "227313": {
    "answer": "/Subject/admin/pic/0517/227313B1.gif"
  },
  "217045": {
    "answer": "B"
  },
  "217046": {
    "answer": "C"
  },
  "217077": {
    "answer": "正确"
  },
  "217051": {
    "answer": "C"
  },
  "217057": {
    "answer": "C"
  },
  "232777": {
  },
  "217078": {
    "answer": "C"
  },
  "227300": {
    "answer": "BADC"
  },
  "217136": {
    "answer": "正确"
  },
  "217080": {
    "answer": "C"
  },
  "227315": {
    "answer": "/Subject/admin/pic/0517/227315B1.gif"
  },
  "238880": {
    "answer": "/Subject/admin/pic/0517/238880B1.gif"
  },
  "238864": {
    "answer": "的哈夫曼编码如下表示："
  },
  "227332": {
    "answer": "/Subject/admin/pic/0517/227332A1.gif"
  },
  "217079": {
    "answer": "A"
  },
  "217134": {
    "answer": "正确"
  },
  "238885": {
    "answer": "hl&gt;hr"
  },
  "217135": {
    "answer": "错误"
  },
  "238860": {
    "answer": "。"
  },
  "238881": {
    "answer": "/Subject/admin/pic/0517/238881B1.gif"
  },
  "217088": {
    "answer": "A"
  },
  "227314": {
    "answer": "A"
  },
  "217129": {
    "answer": "D"
  },
  "217081": {
    "answer": "C"
  },
  "238879": {
    "answer": "/Subject/admin/pic/0517/238879A1.gif"
  },
  "217130": {
    "answer": "A"
  },
  "217131": {
    "answer": "B"
  },
  "238871": {
    "answer": "/Subject/admin/pic/0517/238871A1.gif"
  },
  "227319": {
    "answer": "/Subject/admin/pic/0517/227319A1.gif"
  },
  "217138": {
    "answer": "正确"
  },
  "217087": {
    "answer": "A"
  },
  "217090": {
    "answer": "A"
  },
  "217137": {
    "answer": "正确"
  },
  "227311": {
    "answer": "/Subject/admin/pic/0517/227311A1.gif"
  },
  "217092": {
    "answer": "A"
  },
  "227336": {
    "answer": "/Subject/admin/pic/0517/227336A1.gif"
  },
  "227301": {
    "answer": "66"
  },
  "227316": {
    "answer": "/Subject/admin/pic/0517/227316A1.gif"
  },
  "217086": {
    "answer": "C"
  },
  "238874": {
    "answer": "/Subject/admin/pic/0517/238874A1.gif"
  },
  "217085": {
    "answer": "A"
  },
  "227306": {
    "answer": "或者（普利姆算法、克鲁斯卡尔算法）"
  },
  "227318": {
    "answer": "/Subject/admin/pic/0517/227318B1.gif"
  },
  "217118": {
    "answer": "D"
  },
  "227333": {
    "answer": "/Subject/admin/pic/0517/227333B1.gif"
  },
  "227309": {
    "answer": "/Subject/admin/pic/0517/227309B1.gif"
  },
  "238875": {
    "answer": "/Subject/admin/pic/0517/238875B1.gif"
  },
  "227320": {
    "answer": "/Subject/admin/pic/0517/227320B1.gif"
  },
  "227335": {
    "answer": "/Subject/admin/pic/0517/227335B1.gif"
  },
  "217141": {
    "answer": "正确"
  },
  "217123": {
    "answer": "A"
  },
  "227297": {
    "answer": "）排好序。"
  },
  "227334": {
    "answer": "/Subject/admin/pic/0517/227334B1.gif"
  },
  "217119": {
    "answer": "C"
  }
}